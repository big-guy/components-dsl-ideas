/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/custom_plugins.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

gradlePlugin {
    // Define the plugin
    plugins {
        javaLibrary {
            id = 'ng.org.gradle.java-library'
            implementationClass = 'ng.org.gradle.java.JavaLibraryPlugin'
        }
        jvmLibrary {
            id = 'ng.org.gradle.jvm-library'
            implementationClass = 'ng.org.gradle.jvm.JvmLibraryPlugin'
        }
        jvmBase {
            id = 'ng.org.gradle.jvm-base'
            implementationClass = 'ng.org.gradle.jvm.JvmBasePlugin'
        }
        jvmEcosystem {
            id = 'ng.org.gradle.jvm-ecosystem'
            implementationClass = 'ng.org.gradle.jvm.JvmEcosystemPlugin'
        }
        softwareLibrary {
            id = 'ng.org.gradle.software-library'
            implementationClass = 'ng.org.gradle.software.SoftwareLibraryPlugin'
        }
        softwareComponent {
            id = 'ng.org.gradle.software-component'
            implementationClass = 'ng.org.gradle.software.SoftwareComponentPlugin'
        }
        javaLanguage {
            id = 'ng.org.gradle.java-language'
            implementationClass = 'ng.org.gradle.java.JavaLanguagePlugin'
        }
        javaLanguageBase {
            id = 'ng.org.gradle.java-language-base'
            implementationClass = 'ng.org.gradle.java.JavaLanguageBasePlugin'
        }
    }
}
